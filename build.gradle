
configure(allprojects) { project ->
	group = PROJ_GROUP
	version = PROJ_VERSION	
	ext.bboss_version=PROJ_BBOSS_VERSION
	apply plugin: "java"
	apply plugin: "maven-publish"
	apply plugin: "eclipse"
	apply plugin: "idea"
	apply plugin: "signing"
	apply plugin: "java-library"
	eclipse {
		jdt {
			//if you want to alter the java versions (by default they are configured with gradle java plugin settings):
			sourceCompatibility = SOURCE_COMPILER_LEVEL
			targetCompatibility = TARGET_COMPILER_LEVEL
			javaRuntimeName = "../../org.eclipse.jdt.launching.JRE_CONTAINER"

		}
	}

	tasks.withType(JavaCompile) {
		
		sourceCompatibility = SOURCE_COMPILER_LEVEL
		targetCompatibility = TARGET_COMPILER_LEVEL
		options.encoding = 'UTF-8'
	}

	tasks.withType(Javadoc) {
		sourceCompatibility = JAVADOC_SOURCE_LEVEL
		targetCompatibility = JAVADOC_COMPILER_LEVEL
		options.encoding = 'UTF-8'
		// disable the crazy super-strict doclint tool in Java 8
        // noinspection SpellCheckingInspection
		if (JavaVersion.current().isJava8Compatible()) {
			options.addStringOption('Xdoclint:none', '-quiet')
		}
	}

	jar {
		manifest {
			attributes (
					'Implementation': version,
					'Specification-Version': version,
					'Implementation-Vendor': 'bbossgroups',
					'Implementation-ProductID': project.name,
					'Compile-Timestamp': new Date().format('yyyy-MM-dd HH:mm:ss'),
					'Compile-User': DEVELOPER_NAME
			)
		}
	}


	dependencies {
		testImplementation 'junit:junit:4.12'
		
		 
	}

	repositories {
		mavenLocal()
		maven {
	        url "https://maven.aliyun.com/nexus/content/groups/public"
	    }
		mavenCentral()
		
		
	}
	if(project.getProperty('skipTest').equals("true"))
	{
		compileTestJava.enabled=false
		processTestResources.enabled=false
		testClasses.enabled = false
		test.enabled = false  
	}
}

 
configure(subprojects) { subproject ->
	task sourcesJar(type: Jar) {
		archiveClassifier = "sources"
		from sourceSets.main.allJava
		duplicatesStrategy = DuplicatesStrategy.INCLUDE
	}
	processResources{
		duplicatesStrategy = DuplicatesStrategy.INCLUDE
	}
	task javaDocJar(type: Jar, dependsOn: javadoc) {
		archiveClassifier = "javadoc"
		from javadoc.destinationDir
	}
	artifacts {
		archives sourcesJar, javaDocJar
	}

	dependencies {
		api (
				[group: 'com.fasterxml.jackson.core', name: 'jackson-annotations', version: "${jacksonversion}",transitive: false],
            [group: 'com.fasterxml.jackson.core', name: 'jackson-core', version: "${jacksonversion}",transitive: false],
            [group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: "${jacksondatabaindversion}",transitive: false],
            [group: 'com.fasterxml.jackson.dataformat', name: 'jackson-dataformat-xml', version: "${jacksonversion}",transitive: false],
	            [group: 'com.bbossgroups', name: 'bboss-event', version: "${PROJ_BBOSS_VERSION}", transitive: false],
	            [group: 'com.bbossgroups', name: 'bboss-mvc', version: "${PROJ_BBOSS_VERSION}", transitive: false],
	            [group: 'com.bbossgroups', name: 'bboss-soa', version: "${PROJ_BBOSS_VERSION}", transitive: false],
	            [group: 'com.bbossgroups', name: 'bboss-persistent', version: "${PROJ_BBOSS_VERSION}", transitive: true],
	            [group: 'com.bbossgroups.security', name: 'bboss-security', version: "${PROJ_SECURITY_VERSION}", transitive: false],
	            [group: 'com.bbossgroups.security', name: 'bboss-security-web', version: "${PROJ_SECURITY_VERSION}", transitive: false],
	            [group: 'com.bbossgroups.security', name: 'bboss-security-web-inf', version: "${PROJ_SECURITY_VERSION}", transitive: false],
	           
				[group: 'org.jgroups', name: 'jgroups', version: '4.0.1.Final', transitive: false]     ,
	            [group: 'commons-logging', name: 'commons-logging', version: '1.1.3', transitive: false],
	            [group: 'commons-beanutils', name: 'commons-beanutils-core', version: '1.8.0', transitive: false],
	            [group: 'commons-cli', name: 'commons-cli', version: '1.2', transitive: false],
	            [group: 'commons-codec', name: 'commons-codec', version: '1.4', transitive: false],
	            [group: 'org.apache.commons', name: 'commons-compress', version: '1.4.1', transitive: false],
	            [group: 'commons-configuration', name: 'commons-configuration', version: '1.6', transitive: false],
	            [group: 'commons-daemon', name: 'commons-daemon', version: '1.0.13', transitive: false],
	            [group: 'commons-io', name: 'commons-io', version: '2.4', transitive: false],
	            [group: 'commons-digester', name: 'commons-digester', version: '1.8', transitive: false],
	            [group: 'org.apache.commons', name: 'commons-math3', version: '3.1.1', transitive: false],
	            [group: 'commons-net', name: 'commons-net', version: '3.1', transitive: false],
	            
	            
	            [group: 'com.google.code.gson', name: 'gson', version: '2.2.4', transitive: false]     ,
				[group: 'com.google.guava', name: 'guava', version: '11.0.2', transitive: false],
				
	            [group: 'org.apache.hadoop', name: 'hadoop-annotations', version: "${hadoop_version}", transitive: false],
	            [group: 'org.apache.hadoop', name: 'hadoop-auth', version: "${hadoop_version}", transitive: false],
	            [group: 'org.apache.hadoop', name: 'hadoop-common', version: "${hadoop_version}", transitive: false],
	            [group: 'org.apache.hadoop', name: 'hadoop-hdfs', version: "${hadoop_version}", transitive: false],
	            [group: 'org.apache.hadoop', name: 'hadoop-hdfs-nfs', version: "${hadoop_version}", transitive: false],
	            [group: 'org.apache.htrace', name: 'htrace-core', version: '3.1.0-incubating', transitive: false],
	            [group: 'com.fasterxml.uuid', name: 'java-uuid-generator', version: '3.1.2', transitive: false],
	            [group: 'com.google.protobuf', name: 'protobuf-java', version: '2.5.0', transitive: false],
	            


	            fileTree(dir: '../lib', include: '**/*.jar'),
	            [group: 'jstl', name: 'jstl', version: '1.2', transitive: false],
	            [group: 'org.xerial', name: 'sqlite-jdbc', version: '3.8.11.2', transitive: false],
	    )
	}
 
	
}

configure([project(":bigdata"),project(":bigdata-web")]) { subproject ->
	publishing {
		publications {
			mavenJava(MavenPublication) {
				groupId project.group
				artifactId project.name
				version "${version}"
				from components.java
				artifact sourcesJar
				artifact javaDocJar
//				versionMapping {
//					usage('java-api') {
//						fromResolutionOf('runtimeClasspath')
//					}
//					usage('java-runtime') {
//						fromResolutionResult()
//					}
//				}
//				from components.java
				pom {
					name = project.name
					packaging = 'jar'
					// optionally artifactId can be defined here
					description = PROJ_DESCRIPTION
					url = PROJ_WEBSITEURL

					scm {
						connection = scm_connection
						developerConnection = scm_developerConnection
						url = scm_url
					}

					licenses {
						license {
							name = PROJ_LICENCE_NAME
							url = PROJ_LICENCE_URL
						}
					}

					developers {
						developer {
							id = DEVELOPER_ID
							name = DEVELOPER_NAME
							email = DEVELOPER_EMAIL
						}
					}

				}
			}
		}
		repositories {
//			maven {
//				// change URLs to point to your repos, e.g. http://my.org/repo
//				def releasesRepoUrl = layout.buildDirectory.dir('repos/releases')
//				def snapshotsRepoUrl = layout.buildDirectory.dir('repos/snapshots')
//				url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl
//			}
			maven {
				// change URLs to point to your repos, e.g. http://my.org/repo
				allowInsecureProtocol = true
				url = sonatype_url
				credentials {
					username = sonatype_username
					password = sonatype_password
				}

			}


		}
	}

	signing {
		sign publishing.publications.mavenJava
//		sign configurations.archives
	}

}